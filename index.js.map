{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst API_KEY = '48661000-87492d5612d6e41eb1a42ef3d';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query) {\n  // Проверка на пустой запрос\n  if (!query || query.trim() === '') {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search term!',\n      position: 'topRight'\n    });\n    return [];\n  }\n\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true\n      },\n    });\n\n    if (response.data.totalHits > 0) {\n      return response.data.hits;\n    } else {\n      iziToast.warning({\n        title: 'Info',\n        message: 'No images found. Please try another search term.',\n        position: 'topRight'\n      });\n      return [];\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load images. Please try again.',\n      position: 'topRight'\n    });\n    return [];\n  }\n}\n\n\n\n\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function renderImages(images) {\n  gallery.innerHTML = ''; // Очистка галереи перед добавлением новых изображений\n\n  if (images.length === 0) {\n    showErrorMessage();\n    return;\n  }\n\n  const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n  <div class=\"gallery-item\">\n    <a href=\"${largeImageURL}\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n    </a>\n    <div class=\"image-info\">\n      <div class=\"item\">\n        <span class=\"label\">Likes</span>\n        <span class=\"count\">${likes}</span>\n      </div>\n      <div class=\"item\">\n        <span class=\"label\">Views</span>\n        <span class=\"count\">${views}</span>\n      </div>\n      <div class=\"item\">\n        <span class=\"label\">Comments</span>\n        <span class=\"count\">${comments}</span>\n      </div>\n      <div class=\"item\">\n        <span class=\"label\">Downloads</span>\n        <span class=\"count\">${downloads}</span>\n      </div>\n    </div>\n  </div>\n`).join('');\n\n\n  gallery.innerHTML = markup;\n\n  lightbox.refresh(); // Обновляем lightbox после вставки изображений\n}\n\nexport function showErrorMessage() {\n  gallery.innerHTML = `\n    <p class=\"error-message\">\n      Sorry, no images match your search. Please try again!\n    </p>\n  `;\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst form = document.querySelector('.search-form');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// Функция для показа лоадера\nfunction showLoader() {\n  document.getElementById('loading-overlay').style.display = 'flex';\n}\n\n// Функция для скрытия лоадера\nfunction hideLoader() {\n  document.getElementById('loading-overlay').style.display = 'none';\n}\n\n// Массив случайных тем\nconst defaultQueries = ['nature', 'technology', 'art', 'food', 'travel', 'sports', 'animals', 'architecture', 'people', 'music'];\n\n// Функция для получения случайного подмассива из массива\nfunction getRandomSubarray(arr, size) {\n  const shuffled = arr.slice().sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, size);\n}\n\n// Функция загрузки случайных изображений\nasync function loadDefaultImages() {\n  // Выбираем 5 случайных категорий\n  const randomQueries = getRandomSubarray(defaultQueries, 5).join(',');\n\n  try {\n    showLoader(); // Показываем лоадер перед загрузкой\n    const images = await fetchImages(randomQueries); // Загружаем изображения по случайному запросу\n    renderImages(images);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load images. Please try again.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader(); // Скрываем лоадер после загрузки\n  }\n}\n\n// Загружаем случайные изображения при загрузке страницы\nloadDefaultImages();\n\n// Загрузка изображений по запросу пользователя\nform.addEventListener('submit', async (event) => {\n  showLoader(); // Показываем лоадер при нажатии на кнопку поиска\n  event.preventDefault();\n\n  const query = event.target.elements.searchQuery.value.trim();\n  if (!query) {\n    iziToast.warning({\n      title: 'Error',\n      message: 'Please enter a search term!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  showLoader(); // Показываем лоадер перед запросом\n\n  try {\n    const images = await fetchImages(query);\n    renderImages(images);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load images. Please try again.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader(); // Скрываем лоадер после загрузки\n  }\n});\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","iziToast","response","axios","gallery","lightbox","SimpleLightbox","renderImages","images","showErrorMessage","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","showLoader","hideLoader","defaultQueries","getRandomSubarray","arr","size","loadDefaultImages","randomQueries","event"],"mappings":"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"}